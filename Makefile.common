# include Makefile

#This file is included in the general Makefile, the libs Makefile and the src Makefile

TOP=$(shell readlink -f "$(dir $(lastword $(MAKEFILE_LIST)))")
PROGRAM_NAME=bin/main
LIBDIR=$(TOP)/libs
STMLIB=$(LIBDIR)/STM32_USB-FS-Device_Lib_V4.0.0/Libraries

# Toolchain settings
TC_PATH=/mydata/toolchain/gcc-arm-none-eabi-5_3-2016q1
TC=$(TC_PATH)/bin/arm-none-eabi
CC=$(TC)-gcc
LD=$(TC)-ld -v
AR=$(TC)-ar
GDB=$(TC)-gdb
# dump tools
OBJCOPY=$(TC)-objcopy
READELF=$(TC)-readelf
SIZE=$(TC)-size
OBJDUMP=$(TC)-objdump
NM=$(TC)-nm

# Device
#STM32F103RBT (128KB FLASH, 20KB RAM) --> STM32F10X_MD
#STM32F103RET (512KB FLASH, 64KB RAM) --> STM32F10X_HD
#STM32F103ZET (512KB FLASH, 64KB RAM) --> STM32F10X_HD
TypeOfMCU=STM32F10X_HD
CFLAGS+=-D $(TypeOfMCU)

# use JLinkExe for 'make flash'
# https://www.segger.com/jlink_supported_devices.html
JLINKEXE_SCRIPT=/tmp/JLinkExe.script
SUPPORTED_DEVICE=STM32F103ZE

INCLUDE+=-I.
INCLUDE+=-I$(TC_PATH)/arm-none-eabi/include
INCLUDE+=-I$(STMLIB)/CMSIS/Include
INCLUDE+=-I$(STMLIB)/CMSIS/Device/ST/STM32F10x/Include
INCLUDE+=-I$(STMLIB)/CMSIS/Device/ST/STM32F10x/Source/Templates
INCLUDE+=-I$(STMLIB)/STM32F10x_StdPeriph_Driver/inc
INCLUDE+=-I$(STMLIB)/STM32_USB-FS-Device_Driver/inc

# symbols or marcos defined here
SYMBOLS_DEFINE = -DMY_DEBUG -DUSE_STATIC_LIB
CFLAGS+=$(SYMBOLS_DEFINE)

COMMONFLAGS=-g -mcpu=cortex-m3 -mthumb
COMMONFLAGSlib=$(COMMONFLAGS)

#Different optimize settings for library and source files can be realized by using arguments
#Compiler optimize settings:
# -O0 no optimize, reduce compilation time and make debugging produce the expected results (default).
# -O1 optimize, reduce code size and execution time, without much increase of compilation time.
# -O2 optimize, reduce code execution time compared to ‘O1’, increase of compilation time.
# -O3 optimize, turns on all optimizations, further increase of compilation time.
# -Os optimize for size, enables all ‘-O2’ optimizations that do not typically increase code size and other code size optimizations.
#Recommended optimize settings for release version: -O3
#Recommended optimize settings for debug version: -O0
#Example:
# make OptLIB=3 OptSRC=0 all tshow

#Commands for general Makefile and src Makefile
ifeq ($(OptSRC),0)
	COMMONFLAGS+=-O0
	InfoTextSrc=src (no optimize, -O0)
else ifeq ($(OptSRC),1)
	COMMONFLAGS+=-O1
	InfoTextSrc=src (optimize time+ size+, -O1)
else ifeq ($(OptSRC),2)
	COMMONFLAGS+=-O2
	InfoTextSrc=src (optimize time++ size+, -O2)
else ifeq ($(OptSRC),s)
	COMMONFLAGS+=-Os
	InfoTextSrc=src (optimize size++, -Os)
else
	COMMONFLAGS+=-O3
	InfoTextSrc=src (full optimize, -O3)
endif

CFLAGS+=$(COMMONFLAGS) -Wall $(INCLUDE)
CFLAFS+=-Werror
CFLAGS+=-D VECT_TAB_FLASH

#Commands for libs Makefile
ifeq ($(OptLIB),0)
	COMMONFLAGSlib+=-O0
	InfoTextLib=libs (no optimize, -O0)
else ifeq ($(OptLIB),1)
	COMMONFLAGSlib+=-O1
	InfoTextLib=libs (optimize time+ size+, -O1)
else ifeq ($(OptLIB),2)
	COMMONFLAGSlib+=-O2
	InfoTextLib=libs (optimize time++ size+, -O2)
else ifeq ($(OptLIB),s)
	COMMONFLAGSlib+=-Os
	InfoTextLib=libs (optimize size++, -Os)
else
	COMMONFLAGSlib+=-O0
	InfoTextLib=libs (full optimize, -O0)
endif
CFLAGSlib+=$(COMMONFLAGSlib) -Wall -Werror $(INCLUDE)
CFLAGSlib+=-D $(TypeOfMCU)
CFLAGSlib+=-D VECT_TAB_FLASH
